$spacer: 1rem;
$spacer-x: $spacer;
$spacer-y: $spacer;
$spacers: (
        0: (
                x: 0,
                y: 0
        ),
        q: (
                x: ($spacer-x * 0.25),
                y: ($spacer-y * 0.25)
        ), h: (
                x: ($spacer-x * 0.5),
                y: ($spacer-y * 0.5)
        ),
        1: (
                x: $spacer-x,
                y: $spacer-y
        ),
        2: (
                x: ($spacer-x * 1.5),
                y: ($spacer-y * 1.5)
        ),
        3: (
                x: ($spacer-x * 2),
                y: ($spacer-y * 2)
        ),
        4: (
                x: ($spacer-x * 2.5),
                y: ($spacer-y * 2.5)
        )
);


@mixin spacing() {
  @each $prop, $abbrev in (margin: m, padding: p) {
    @each $size, $lengths in $spacers {
      $length-x: map-get($lengths, x);
      $length-y: map-get($lengths, y);

      .#{$abbrev}-#{$size} {
        #{$prop}: $length-y $length-x;
      }
      .#{$abbrev}t-#{$size} {
        #{$prop}-top: $length-y;
      }
      .#{$abbrev}r-#{$size} {
        #{$prop}-right: $length-x;
      }
      .#{$abbrev}b-#{$size} {
        #{$prop}-bottom: $length-y;
      }
      .#{$abbrev}l-#{$size} {
        #{$prop}-left: $length-x;
      }
      .#{$abbrev}y-#{$size} {
        #{$prop}-top: $length-y;
        #{$prop}-bottom: $length-y;
      }
      .#{$abbrev}x-#{$size} {
        #{$prop}-left: $length-x;
        #{$prop}-right: $length-x;
      }
      .#{$abbrev}-#{$size} {
        #{$prop}: $size;
      }
    }
  }
}

@include spacing;
